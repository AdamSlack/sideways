/*
Deployment script for Blank

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Blank"
:setvar DefaultFilePrefix "Blank"
:setvar DefaultDataPath "C:\Users\n0574951\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\ProjectsV13\"
:setvar DefaultLogPath "C:\Users\n0574951\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\ProjectsV13\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[algorithm_results]...';


GO
CREATE TABLE [dbo].[algorithm_results] (
    [test_id]      INT           NOT NULL,
    [algorthim_id] INT           NULL,
    [results]      VARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([test_id] ASC)
);


GO
PRINT N'Creating [dbo].[algorithms]...';


GO
CREATE TABLE [dbo].[algorithms] (
    [algorithm_id]   INT  NOT NULL,
    [clinician_id]   INT  NOT NULL,
    [algorithm_name] TEXT NOT NULL,
    PRIMARY KEY CLUSTERED ([algorithm_id] ASC)
);


GO
PRINT N'Creating [dbo].[car_directions]...';


GO
CREATE TABLE [dbo].[car_directions] (
    [test_id]    INT NOT NULL,
    [time_taken] INT NOT NULL,
    [points]     INT NOT NULL,
    PRIMARY KEY CLUSTERED ([test_id] ASC)
);


GO
PRINT N'Creating [dbo].[clinicians]...';


GO
CREATE TABLE [dbo].[clinicians] (
    [clinician_id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([clinician_id] ASC)
);


GO
PRINT N'Creating [dbo].[compass_directions]...';


GO
CREATE TABLE [dbo].[compass_directions] (
    [test_id]    INT NOT NULL,
    [time_taken] INT NOT NULL,
    [points]     INT NOT NULL,
    PRIMARY KEY CLUSTERED ([test_id] ASC)
);


GO
PRINT N'Creating [dbo].[dot_cancellation]...';


GO
CREATE TABLE [dbo].[dot_cancellation] (
    [test_id]    INT NOT NULL,
    [time_taken] INT NOT NULL,
    [true_pos]   INT NOT NULL,
    [false_pos]  INT NOT NULL,
    [false_neg]  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([test_id] ASC)
);


GO
PRINT N'Creating [dbo].[localisation_presets]...';


GO
CREATE TABLE [dbo].[localisation_presets] (
    [preset_id]    INT           NOT NULL,
    [region]       TEXT          NOT NULL,
    [localisation] VARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([preset_id] ASC)
);


GO
PRINT N'Creating [dbo].[participant_tests]...';


GO
CREATE TABLE [dbo].[participant_tests] (
    [test_id]        INT NOT NULL,
    [participant_id] INT NOT NULL,
    [clinician_id]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([test_id] ASC)
);


GO
PRINT N'Creating [dbo].[participants]...';


GO
CREATE TABLE [dbo].[participants] (
    [participant_id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([participant_id] ASC)
);


GO
PRINT N'Creating [dbo].[road_scenarios]...';


GO
CREATE TABLE [dbo].[road_scenarios] (
    [test_id]   INT NOT NULL,
    [time_take] INT NOT NULL,
    [points]    INT NULL,
    PRIMARY KEY CLUSTERED ([test_id] ASC)
);


GO
PRINT N'Creating [dbo].[test_interactions]...';


GO
CREATE TABLE [dbo].[test_interactions] (
    [test_id]     INT           NOT NULL,
    [interaction] VARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([test_id] ASC)
);


GO
PRINT N'Creating [dbo].[trail_making]...';


GO
CREATE TABLE [dbo].[trail_making] (
    [test_id]    INT NOT NULL,
    [time_taken] INT NOT NULL,
    [mistakes]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([test_id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[algorithms]...';


GO
ALTER TABLE [dbo].[algorithms] WITH NOCHECK
    ADD FOREIGN KEY ([clinician_id]) REFERENCES [dbo].[clinicians] ([clinician_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[car_directions]...';


GO
ALTER TABLE [dbo].[car_directions] WITH NOCHECK
    ADD FOREIGN KEY ([test_id]) REFERENCES [dbo].[participant_tests] ([test_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[compass_directions]...';


GO
ALTER TABLE [dbo].[compass_directions] WITH NOCHECK
    ADD FOREIGN KEY ([test_id]) REFERENCES [dbo].[participant_tests] ([test_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[dot_cancellation]...';


GO
ALTER TABLE [dbo].[dot_cancellation] WITH NOCHECK
    ADD FOREIGN KEY ([test_id]) REFERENCES [dbo].[participant_tests] ([test_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[participant_tests]...';


GO
ALTER TABLE [dbo].[participant_tests] WITH NOCHECK
    ADD FOREIGN KEY ([participant_id]) REFERENCES [dbo].[participants] ([participant_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[participant_tests]...';


GO
ALTER TABLE [dbo].[participant_tests] WITH NOCHECK
    ADD FOREIGN KEY ([clinician_id]) REFERENCES [dbo].[clinicians] ([clinician_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[road_scenarios]...';


GO
ALTER TABLE [dbo].[road_scenarios] WITH NOCHECK
    ADD FOREIGN KEY ([test_id]) REFERENCES [dbo].[participant_tests] ([test_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[test_interactions]...';


GO
ALTER TABLE [dbo].[test_interactions] WITH NOCHECK
    ADD FOREIGN KEY ([test_id]) REFERENCES [dbo].[participant_tests] ([test_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[trail_making]...';


GO
ALTER TABLE [dbo].[trail_making] WITH NOCHECK
    ADD FOREIGN KEY ([test_id]) REFERENCES [dbo].[participant_tests] ([test_id]);


GO
PRINT N'Creating [dbo].[getClinician]...';


GO
CREATE PROCEDURE [dbo].[getClinician]
	
AS
	SELECT clinician_id as ID from clinicians
RETURN 0
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.algorithms'), OBJECT_ID(N'dbo.car_directions'), OBJECT_ID(N'dbo.compass_directions'), OBJECT_ID(N'dbo.dot_cancellation'), OBJECT_ID(N'dbo.participant_tests'), OBJECT_ID(N'dbo.road_scenarios'), OBJECT_ID(N'dbo.test_interactions'), OBJECT_ID(N'dbo.trail_making'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
